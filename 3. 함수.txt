1. function maple() {
	...
}
과 같은 함수 선언문을 사용하면 대규모 프로젝트시 응답속도가 떨어질 수 있다.
( 인터프리터가 너무 많은 코드를 변수객체에 저장하므로 )
let maple = () => {...} 와 같은 함수 선언문은 스크립트 로딩시점이 아닌 런타임에 해석되고 실행된다.

2. 변수를 인자로 넘기면 call by value( 인자 변경시 원본이 변하지 않음 ), 객체를 인자로 넘기면 call by reference( 인자 변경시 원본이 변함 )
	값만 넘긴다, 참조값을 넘긴다의 차이

3. 함수도 객체이므로 프로퍼티를 가질 수 있다.
function maple() {
}
maple.x = 10
console.log(maple);	// 10

4. 함수 내부에서는 arguments 프로퍼티 사용이 가능하다.
순회가능한 객체라고 보면 되며 받아온 인수들에대한 객체이다.
( 화살표 함수로 선언시 사용불가하다 )

5. caller 프로퍼티
 - 함수명.caller 로 자신을 호출한 함수를 가져올 수 있다.
 (함수내부에서)

6. length 프로퍼티
 - 매개변수의 개수를 의미
 function bar(x) {
   return x;
 }
 console.log(bar.length); // 1

7. name 프로퍼티
함수명을 나타내며 익명함수의 경우 빈문자열을 return 한다.

8. 일반 함수를 (function으로 정의된, (function() {}()) 이런식으로 사용 ) () 로 감싸면 즉시실행되는 함수가 된다. (재사용 불가)
	ㄴ> 안쓸듯

9. 함수 내부에 함수를 정의가능, 자식은 부모의 변수에 접근가능